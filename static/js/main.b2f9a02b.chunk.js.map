{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevState","removeGood","includes","index","lastIndexOf","splice","resetGood","message","length","firstPartOfGoods","slice","join","lastGood","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkHaC,E,4MA1GbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,GAAI,EAAKD,MAAMC,cAAcM,SAASJ,GAAO,CAC3C,IAAMK,EAAQP,EAAcQ,YAAYN,GAExCF,EAAcS,OAAOF,EAAO,GAC5B,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,YAAKI,EAAUJ,qB,EAKnCU,UAAY,WACV,EAAKP,SAAS,CAAEH,cAAe,M,EAGjCW,QAAU,WACR,IAAQX,EAAkB,EAAKD,MAAvBC,cAEJW,EAAU,GAUd,GAR6B,IAAzBX,EAAcY,SAChBD,EAAU,qBAGiB,IAAzBX,EAAcY,SAChBD,EAAO,UAAMX,EAAN,iBAGLA,EAAcY,OAAS,EAAG,CAC5B,IAAMC,EAAmBb,EAAcc,MAAM,GAAI,GAAGC,KAAK,MACnDC,EAAWhB,EAAcA,EAAcY,OAAS,GAEtDD,EAAO,UAAME,EAAN,gBAA8BG,EAA9B,iBAGT,OAAOL,G,4CAGT,WAAU,IAAD,OACCX,EAAkBiB,KAAKlB,MAAvBC,cAER,OACE,sBAAKkB,UAAU,MAAf,UACE,+BACGD,KAAKN,UACoB,IAAzBX,EAAcY,QACb,wBACEO,KAAK,SACLC,QAASH,KAAKP,UAFhB,kBASJ,6BACGb,EAAgBwB,KAAI,SAAAnB,GACnB,OACE,qBAEEgB,UAAWI,IAAWtB,EAAcM,SAASJ,GAAQ,oBAAsB,aAF7E,UAIGA,GACCF,EAAcM,SAASJ,IACvB,wBACEiB,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKnB,QAAQC,IAJjB,iBAUDF,EAAcM,SAASJ,IACtB,wBACEiB,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKf,WAAWH,IAJpB,sBAhBGA,e,GAxEHqB,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2f9a02b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (this.state.selectedGoods.includes(good)) {\n      const index = selectedGoods.lastIndexOf(good);\n\n      selectedGoods.splice(index, 1);\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods],\n      }));\n    }\n  };\n\n  resetGood = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  message = () => {\n    const { selectedGoods } = this.state;\n\n    let message = '';\n\n    if (selectedGoods.length === 0) {\n      message = 'No selected goods';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods} is selected`;\n    }\n\n    if (selectedGoods.length > 1) {\n      const firstPartOfGoods = selectedGoods.slice(0, -1).join(', ');\n      const lastGood = selectedGoods[selectedGoods.length - 1];\n\n      message = `${firstPartOfGoods} and ${lastGood} are selected`;\n    }\n\n    return message;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.message()}\n          {selectedGoods.length !== 0 && (\n            <button\n              type=\"button\"\n              onClick={this.resetGood}\n            >\n              X\n            </button>\n          )}\n        </h1>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={classNames(selectedGoods.includes(good) ? 'App__good--active' : 'App__good')}\n              >\n                {good}\n                {!selectedGoods.includes(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"App__button\"\n                    onClick={() => {\n                      this.addGood(good);\n                    }}\n                  >\n                    add\n                  </button>\n                )}\n                {selectedGoods.includes(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"App__button\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    delete\n                  </button>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}